//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit5.h"
#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm5 *Form5;
int i;
int j;
int Mines;
int FreeCell;
int Field[12][12] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int Bombs[12][12] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
int NewGame (){
	int k;
	int m;
	randomize();
	Mines = 0;
	//GameOver = false;

    //рандом для мин
	for (i = 0; i < 12; i++) {
		for (j = 0; j < 12; j++) {
			if (random(8)==0) {
				Bombs[i][j] = 1; //бомба есть
				Mines = Mines + 1; //счетчик бомб
			}
			else {
				Bombs[i][j] = 2; //бомбы нет
			}
		}
	}
	FreeCell = 144 - Mines;
	//подсчет бомб вокруг клеток
	for (i = 0; i < 12; i++) {
		 for (j = 0; j < 12; j++) {
			if (j==0) { //исключение для первого столбца
				if (i==0) {
					if (Bombs[i][j]==1) { //если в клетке есть бомба
						for (k = i; k < i+2; k++) {
							for (m = j; m < j+2; m++) {
								if (Bombs[k][m]!=1) { //не считая клетку с бомбой и учитывая, что одна из соседних клеток может оказаться бомбой
									Bombs[k][m]++; //всем клеткам вокруг бомбы +1
								};
							};
						};
					};
				}
				else if (i==11) {
						if (Bombs[i][j]==1) {
							for (k = i-1; k < i+1; k++) {
								for (m = j; m < j+2; m++) {
									if (Bombs[k][m]!=1) {
										Bombs[k][m]++;
									};
								};
							};
						};
					 }
					 else {
						if (Bombs[i][j]==1) {
							for (k = i-1; k < i+2; k++) {
								for (m = j; m < j+2; m++) {
									if (Bombs[k][m]!=1) {
										Bombs[k][m]++;
									};
								};
							};
						};
					 }
			}
			else if (j==11) { //исключение для последнего столбца
				if (i==0) {
					if (Bombs[i][j]==1) {
						for (k = i; k < i+2; k++) {
							for (m = j-1; m < j+1; m++) {
								if (Bombs[k][m]!=1) {
									Bombs[k][m]++;
								};
							};
						};
					};
				}
				else if (i==11) {
						if (Bombs[i][j]==1) {
							for (k = i-1; k < i+1; k++) {
								for (m = j-1; m < j+1; m++) {
									if (Bombs[k][m]!=1) {
										Bombs[k][m]++;
									};
								};
							};
						};
					 }
					 else {
						if (Bombs[i][j]==1) {
							for (k = i-1; k < i+2; k++) {
								for (m = j-1; m < j+1; m++) {
									if (Bombs[k][m]!=1) {
										Bombs[k][m]++;
									};
								};
							};
						};
					 }
			}
				else{ //центральные клетки
					if (Bombs[i][j]==1) {
						for (k = i-1; k < i+2; k++) {
							for (m = j-1; m < j+2; m++) {
								if (Bombs[k][m]!=1) {
									Bombs[k][m]++;
								};
							};
						};
					};
				};
		 };
	};
	for (i = 0; i < 12; i++) {
		for (j = 0; j < 12; j++) {
			Field[i][j] = 0;
		}
	}
}
//---------------------------------------------------------------------------
__fastcall TForm5::TForm5(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TForm5::Button2Click(TObject *Sender)
{
    Close();
}
//---------------------------------------------------------------------------
void __fastcall TForm5::Button1Click(TObject *Sender)
{
    //новая игра
	for (i = 0; i < 12; i++) {
		for (j = 0; j < 12; j++) {
			Field[i][j] = 0;
			Bombs[i][j] = 0;
		}
	}
	NewGame();
	Form1->DrawGrid1->Repaint(); //обновление
}
//---------------------------------------------------------------------------
